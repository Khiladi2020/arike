# Generated by Django 4.0.1 on 2022-03-04 18:28
import random
from django.db import migrations

STATES = ["Andhra Pradesh", "Karnataka", "Assam", "Bihar",
          "Chhattisgarh", "Goa", "Gujarat", "Haryana", "Himachal Pradesh"]
DISTRICTS = ["District 1", "District 2", "District 3"]

LSG_BODIES = [(1, "Grama Panchayath"), (2, "Block Panchayath"),
              (3, "District Panchayath")]

WARDS = [("Ward 1", 506), ("Ward 2", 906), ("Ward 3", 487), ("Ward 4", 792)]


def populate_data(apps, schema_editor):
    State = apps.get_model('app_admin', 'State')
    District = apps.get_model('app_admin', 'District')
    LsgBody = apps.get_model('app_admin', 'LsgBody')
    Ward = apps.get_model('app_admin', 'Ward')

    lsg_body_list = []

    for state in STATES:
        # create state
        new_state = State(name=state)
        new_state.save()

        # Create districts for concerned state
        for district in DISTRICTS:
            new_district = District(name=district, state=new_state)
            new_district.save()

            # Create Lsg for concerned district
            for lsgbody in LSG_BODIES:
                new_lsg_code = f"100{lsgbody[0]}"
                new_lsg = LsgBody(
                    name=lsgbody[1], kind=lsgbody[0], lsg_body_code=new_lsg_code, district=new_district)
                new_lsg.save()
                # insert intl lsg_body list
                lsg_body_list.append(new_lsg)

    # randomly pick lsg bodies according to ward list size
    random_lsg = random.choices(lsg_body_list, k=len(WARDS))

    # Create some wards
    for idx, ward in enumerate(WARDS):
        new_ward = Ward(name=ward[0], number=ward[1], lsg_body=random_lsg[idx])
        new_ward.save()


class Migration(migrations.Migration):

    dependencies = [
        ('app_admin', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_data)
    ]
